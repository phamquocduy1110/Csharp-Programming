<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADIAAAAyCAYAAAAeP4ixAAAABGdBTUEAALGPC/xhBQAAA71JREFUaEPt
        mUtIVFEcxrUXPaB3myAiahERCZGbKJLosSmJZHJGx0kKrUWboMSKyAiiWrRppZvMFqkVPaiFURG0ix6S
        YFnQyl1RuNHE1H7/+M9w5jBTeu85Ocp88HHH+537fed/z7333HMtyCOPHEQsFttQWVlZDx/BL3AYjioH
        4LuKioobbA8lEokleljOoDAej5fRuVfa4TGRgn6yvUnxa9Vn4kABm+nMa7ODAfgLn0YKWqq2/xWFdOCM
        dMLoUFj2yolRf/+ora2dqdd5ps7I2X2BfoLfxdFodHkkEpkO55SXl69G2wmvon02jklRLjcY0Sh/kE4R
        eN/uAPxzedDxFdr0n6DDOziu0/IRDuN1QJv5AeHnMgR/kzOtTcYFGV2OvYTHiOXZz/4ibeYWGG8lwHyc
        CrurqqpWaZPAkBHAa9D05qT1VFdXz9YmblBSUjID8y4zCH51UUQS+NVY/qMUeFZlN8A0boWMUMR2lZ0B
        3yYrp4+RWaRyeGD4xgpoVckpeJgsxvuHlVWncjhgtM4yHmLI16jsHPjLK46Z16lSOGBUZxl3qOQF8g5G
        xpCZyeW1UuXgwOiBacpoHFPJG8h4aWXGVAoOjNJmYW7y9Sp5AzkXzEz5W6XgwERev1OmTp8iWUDOUTMT
        NqsUDDp/mIYDKnkFl1KplXtXpcCQt1xzNh+W4lTzBkY9amQK21QKDkz6TFN5o1XJGyjkuJnJCDWqFByY
        vDVNWQBtUckbKOSamQnDT4qYXLdML6rkDWTIej+VSWG7VQoORiRhmsIPKnkBeUVW3iCP/HkqBwdG82G/
        YSxnaL/KzkEh7VbWPZXCA8PbpjnsktWiys5AERvxTlvzsK9M5fBgaDdhaq/izqvsBHL54GkvfbsbGhqm
        aRM3wLTZChlxeLZkvmqz/N3c5Db0rbTXCpKvHoe1SSDISNj3hTLca8nfwByyjYC0tbWyKcgnUI4rhu8N
        nxQ5Qc/kM5I2dQ/OXoygTB/mZGVXT/gybZoVeBTBW7S377s0UswT38XsIyjtkWxQinwKT9EuIdc5I7mX
        30fYd4W/e7TdWNnhuxiZuD5ZoV5I1kOKmaXR7iHfnQiSNfZ3M3g8pJPyLrcLtpj7M9DvyAgIWECHThL2
        0QrPRvnE+hiWcnihesjn2IkvJgn5WE3gQXgZttLZdiG/W9ieZruHkVyozdOQc8WEQb6YXEW+mFzFlCpG
        /913J0MBST6nzVxtntvINjI80v3O+j5gFzMpi0giWcykLiIJuWcoIvdv7jymHgoKfgOgW2A9SvA4ygAA
        AABJRU5ErkJggg==
</value>
  </data>
</root>